# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.3.1
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.kubernetes.cri-o.ContainerType/jenkins-blueocean: container
    io.kubernetes.cri-o.SandboxID/jenkins-blueocean: a60edd6a9c9ada402c5f0f71c85146e5128e71e4a31fb4e530ccb16d1f1e153
    io.podman.annotations.autoremove/jenkins-blueocean: "FALSE"
    io.podman.annotations.init/jenkins-blueocean: "FALSE"
    io.podman.annotations.privileged/jenkins-blueocean: "FALSE"
    io.podman.annotations.publish-all/jenkins-blueocean: "FALSE"
  creationTimestamp: "2022-12-21T01:52:30Z"
  labels:
    app: jenkins-blueocean
  name: jenkins-blueocean
spec:
  automountServiceAccountToken: false
  containers:
  - image: docker.io/jenkinsci/blueocean:latest
    name: jenkins-blueocean
    ports:
    - containerPort: 8080
    - containerPort: 50000
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-data-pvc
    - mountPath: /certs/client
      name: jenkins-docker-certs-pvc
      readOnly: true
  enableServiceLinks: false
  hostname: jenkins-blueocean
  restartPolicy: Always
  volumes:
  - name: jenkins-data-pvc
    persistentVolumeClaim:
      claimName: jenkins-data
  - name: jenkins-docker-certs-pvc
    persistentVolumeClaim:
      claimName: jenkins-docker-certs
      readOnly: true
status: {}
